/// Scans for vulnerabilities in a list of system configurations.
///
/// # Arguments
/// * `configs` - A vector of system configuration strings.
///
/// # Returns
/// A vector of strings describing detected vulnerabilities.
pub fn assess_vulnerabilities(configs: &[String]) -> anyhow::Result<Vec<String>> {
    if configs.is_empty() {
        return Err(anyhow!("Configuration list is empty"));
    }

    let vulnerabilities = configs
        .iter()
        .filter_map(|config| {
            if config.contains("outdated") || config.contains("insecure") {
                Some(format!("Vulnerability found: {}", config))
            } else {
                None
            }
        })
        .collect();

    Ok(vulnerabilities)
}
